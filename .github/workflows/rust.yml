name: Create Release

on:
  push:
    tags:
      - "*"  # Trigger on any tag pushes

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      # Check out the repository code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Cache dependencies (example for Node.js projects)
      - name: Cache Node Modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # (Optional) Install dependencies if your workflow requires them
      - name: Install Dependencies
        if: exists('package-lock.json')
        run: npm ci

      # Validate and fix the tag name if it matches a 40-character hexadecimal string
      - id: validate_tag
        name: Validate and Fix Tag Name
        shell: bash
        run: |
          # Extract tag name from the Git reference
          TAG="${GITHUB_REF##*/}"
          echo "Original tag: ${TAG}"
          
          # If tag is exactly 40 hex characters (looks like a commit SHA), adjust it
          if [[ "${TAG}" =~ ^[0-9a-f]{40}$ ]]; then
            NEW_TAG="v${TAG:0:7}"
            echo "Tag appears to be a commit SHA. Adjusting tag to: ${NEW_TAG}"
            TAG="${NEW_TAG}"
          else
            echo "Tag is valid: ${TAG}"
          fi
          
          # Set the adjusted tag as output for later steps
          echo "tag=${TAG}" >> "$GITHUB_OUTPUT"

      # Create the GitHub release using the validated/adjusted tag
      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.validate_tag.outputs.tag }}
          release_name: "Release ${{ steps.validate_tag.outputs.tag }}"
          body: "Changelog for release ${{ steps.validate_tag.outputs.tag }}"
